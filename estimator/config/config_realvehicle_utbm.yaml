%YAML:1.0

#Multiple thread support
multiple_thread: 0

#optimization PARAMETERS
max_solver_time: 0.03  # max solver itration time (s), to guarantee real time
max_num_iterations: 7   # max solver itrations, to guarantee real time
keyframe_parallax: 0 # keyframe selection threshold (pixel)

evaluate_residual: 1
optimal_odometry: 1

###############################################
# laser parameters
num_of_laser: 2
n_scans: 32

# segmmentation
segment_cloud: 0
horizon_scan: 1800
min_cluster_size: 30
min_line_size: 10
segment_valid_point_num: 5
segment_valid_line_num: 3
segment_theta: 1.0 # Lego-loam: 1.0

# window sizes
window_size: 4
opt_window_size: 1

# Extrinsic parameter between multiple LiDARs.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Have no prior about extrinsic parameters. We will initialize and optimize around them
optimal_extrinsic: 0

# the extrinsics from the base_link to laser_link
# qx qy qz qw px py pz
body_T_laser: !!opencv-matrix
   rows: 2
   cols: 7
   dt: d
# no prior
   # data: [0, 0, 0, 1, 0, 0, 0, 
   #        0, 0, 0, 1, 0, 0, 0]
# initialization
   # data: [0, 0, 0, 1, 0, 0, 0, 
   #        0, 0, 0, 1, 0, -1, 0]
# refinement
   data: [0, 0, 0, 1, 0, 0, 0,
          -0.002297, -0.0064405, -0.00202941, 0.9999745, 0.98935, -0.019818, 0.003072]
   # data: [0, 0, 0, 1, 0, 0, 0,
         #  0, 0, 0, 1, 1, 0, 0]

          #unsynchronization parameters
estimate_td: 0                      # 0 have an accurate time offset among sensors
                                    # 1 online estimate time offset among sensors

td: !!opencv-matrix                 # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)
   rows: 1
   cols: 2
   dt: d
   data: [0, 0]

idx_ref: 0

cloud_topic:
   - "/hdl32e_left/velodyne_points"
   - "/hdl32e_right/velodyne_points"

laser_sync_threshold: 0.07
roi_range: 3
roi_range_mapping: 0

# odometry parameters
scan_period: 0.1
distance_sq_threshold: 25
nearby_scan: 2.5
distortion: 1

# movement type
planar_movement: 1

# feature corresponding paprameters
min_match_sq_dis: 1.0
min_plane_dis: 0.2

# factor
marginalization_factor: 1
point_plane_factor: 1
point_edge_factor: 1
prior_factor: 0
prior_factor_pos: 5
prior_factor_rot: 1
check_jacobian: 0

pcl_viewer: 0
pcl_viewer_normal_ratio: 10

# calibration converage parameters
n_cumu_feature: 10
lambda_initial: 400
lambda_thre_calib: 1000
n_calib: 30

# mapping 
map_corner_res: 0.2
map_surf_res: 0.4
map_eig_thre: 100

# uncertainty parameter
# translation, rotation, point (s, phi, zeta)
uct_ext: !!opencv-matrix
   rows: 2
   cols: 6
   dt: d
   data: [0, 0, 0, 0, 0, 0,
          0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025]
         #  0, 0, 0, 0, 0, 0]

uct_measurement: !!opencv-matrix
   rows: 1
   cols: 3
   dt: d
   data: [0.0025, 0.0025, 0.0025]

trace_threshold_mapping: 2

skip_num_odom_pub: 1